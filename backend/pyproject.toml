[project]
name = "minicampus-backend"
version = "0.1.0"
description = "CampusFlow Backend API"
authors = [{name = "CampusFlow Team", email = "team@campusflow.com"}]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.108.0",
    "uvicorn[standard]>=0.25.0",
    "sqlmodel>=0.0.14",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.9",
    "aiosqlite>=0.20.0",
    "alembic>=1.13.1",
    "authlib>=1.3.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "celery[redis]>=5.3.4",
    "redis>=5.0.1",
    "httpx>=0.26.0",
    "python-dotenv>=1.0.0",
    "pyjwt>=2.10.1"
]

[tool.poetry]
name = "minicampus-backend"
version = "0.1.0"
description = "CampusFlow Backend API"
authors = ["CampusFlow Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.108.0"
uvicorn = {extras = ["standard"], version = "^0.25.0"}
sqlmodel = "^0.0.14"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
aiosqlite = "^0.20.0"
alembic = "^1.13.1"
authlib = "^1.3.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.6"
celery = {extras = ["redis"], version = "^5.3.4"}
redis = "^5.0.1"
httpx = "^0.26.0"
python-dotenv = "^1.0.0"
pyjwt = "^2.10.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.2"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["fastapi", "sqlmodel", "pydantic"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "D100", "D101", "D102", "D103", "D104", "D105"]
exclude = [".git", "__pycache__", ".venv", "alembic"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=term-missing --cov-report=xml"